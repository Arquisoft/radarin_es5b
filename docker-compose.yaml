version: '3.5'
volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  database_net:
    ipam:
      config:
        - subnet: "192.168.0.0/24"
          gateway: "192.168.0.1"
  monitoring_net:
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          gateway: "192.168.1.1"

services:
  mongoserver:
    image: mongo
    volumes:
      - ./restapi/mongo/data:/data/db
    ports:
      - "5050:27017"
    networks:
      database_net:
        ipv4_address: "192.168.0.2"
  restapi:
    build:
      context: ./restapi
      args: 
        MONGO_URI: "mongodb://192.168.0.2"
    ports:
      - "5000:5000"
    command:
      - "/bin/sh"
      - "-c"
      - "/bin/sleep 5 && node server.js"
    networks:
      database_net:
        ipv4_address: "192.168.0.3"
      monitoring_net:
        ipv4_address: "192.168.1.2"
  webapp:
    build: ./webapp
    ports:
      - "3000:3000"
    depends_on: 
      - restapi
  
  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./restapi/monitoring/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    depends_on: 
      - restapi
    networks:
      monitoring_net:
        ipv4_address: 192.168.1.3
  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./restapi/monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=9091
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "9091:9091"
    depends_on: 
      - restapi
    networks:
      monitoring_net:
        ipv4_address: 192.168.1.4